package org.algorithm.benchmark;


import org.openjdk.jmh.annotations.*;

import java.util.concurrent.TimeUnit;

public class SortingApp {

    @State(Scope.Thread)
    public static class MyState {
        public int[] unsortedArray = {649, 144, 601, 85, 920, 224, 118, 708, 579, 16, 557, 914, 485, 936, 700, 597, 659, 807, 795, 5, 905, 804, 474, 35, 34, 893, 639, 663, 626, 471, 488, 993, 425, 789, 815, 310, 877, 160, 15, 717, 588, 662, 918, 3, 367, 889, 223, 238, 653, 838, 292, 972, 129, 131, 939, 888, 115, 769, 79, 189, 70, 212, 521, 651, 671, 832, 391, 943, 483, 459, 974, 664, 553, 991, 834, 486, 220, 980, 263, 863, 239, 240, 215, 676, 1, 130, 514, 260, 575, 139, 227, 280, 941, 308, 616, 58, 969, 718, 271, 281, 42, 109, 504, 373, 866, 158, 621, 820, 178, 77, 404, 444, 884, 249, 300, 808, 904, 336, 270, 408, 309, 242, 399, 830, 40, 111, 580, 819, 850, 945, 738, 460, 200, 702, 166, 982, 117, 656, 340, 523, 343, 41, 628, 48, 282, 429, 377, 760, 457, 963, 979, 285, 505, 45, 687, 289, 378, 435, 581, 525, 763, 782, 755, 685, 953, 233, 490, 382, 793, 275, 598, 507, 392, 352, 13, 876, 744, 235, 737, 680, 952, 481, 797, 566, 6, 99, 400, 89, 741, 885, 314, 856, 21, 72, 8, 622, 12, 149, 912, 188, 59, 326, 816, 297, 962, 910, 27, 252, 882, 777, 813, 17, 206, 19, 88, 93, 542, 975, 315, 721, 697, 458, 614, 278, 161, 339, 307, 273, 906, 754, 331, 549, 517, 30, 346, 839, 748, 108, 636, 76, 152, 332, 965, 95, 990, 984, 237, 102, 173, 806, 822, 997, 550, 545, 593, 752, 944, 706, 407, 554, 97, 501, 116, 569, 745, 420, 157, 47, 847, 197, 881, 62, 401, 841, 759, 883, 956, 784, 448, 256, 765, 196, 489, 165, 886, 44, 7, 531, 185, 895, 305, 925, 190, 228, 868, 477, 976, 678, 610, 32, 923, 957, 786, 250, 135, 527, 739, 368, 350, 432, 562, 484, 349, 386, 958, 677, 151, 954, 390, 405, 476, 461, 337, 359, 544, 203, 620, 843, 113, 726, 52, 973, 243, 899, 710, 353, 829, 216, 934, 842, 911, 28, 903, 385, 874, 940, 247, 594, 670, 742, 922, 430, 648, 776, 312, 104, 342, 81, 615, 498, 605, 921, 853, 908, 338, 983, 867, 679, 618, 236, 187, 134, 994, 381, 772, 887, 692, 809, 871, 298, 516, 266, 967, 559, 503, 217, 848, 354, 57, 155, 787, 470, 388, 204, 524, 799, 619, 393, 164, 136, 177, 987, 433, 657, 468, 730, 497, 213, 778, 396, 727, 539, 844, 672, 415, 701, 696, 535, 25, 690, 556, 999, 630, 509, 547, 258, 410, 450, 684, 537, 159, 384, 801, 870, 873, 919, 582, 192, 409, 837, 274, 821, 101, 246, 348, 110, 198, 667, 707, 611, 658, 734, 295, 366, 495, 802, 71, 394, 334, 496, 167, 358, 792, 689, 179, 633, 90, 445, 785, 344, 431, 492, 818, 528, 600, 986, 774, 283, 416, 68, 465, 913, 360, 441, 955, 947, 513, 728, 23, 890, 122, 929, 53, 606, 211, 650, 182, 775, 107, 138, 259, 798, 92, 365, 612, 811, 590, 534, 434, 846, 779, 127, 473, 985, 602, 642, 716, 418, 732, 191, 571, 137, 132, 49, 996, 942, 499, 573, 828, 858, 586, 725, 724, 124, 272, 351, 316, 992, 288, 645, 635, 321, 968, 306, 865, 803, 753, 950, 794, 419, 226, 156, 361, 506, 208, 38, 411, 222, 638, 54, 703, 148, 961, 180, 758, 966, 623, 379, 892, 299, 558, 981, 162, 995, 14, 172, 766, 669, 767, 94, 599, 833, 417, 142, 195, 290, 561, 438, 872, 303, 977, 660, 46, 36, 327, 80, 861, 22, 74, 771, 519, 91, 901, 402, 456, 96, 464, 265, 294, 479, 552, 762, 704, 123, 735, 147, 931, 641, 262, 812, 328, 768, 722, 462, 568, 949, 951, 302, 73, 733, 300, 740, 736, 345, 202, 526, 831, 937, 140, 487, 128, 9, 686, 387, 800, 860, 896, 114, 530, 814, 637, 780, 924, 585, 175, 374, 296, 98, 304, 629, 87, 69, 625, 773, 675, 33, 695, 502, 826, 248, 78, 319, 214, 781, 655, 613, 643, 82, 244, 63, 18, 978, 783, 29, 181, 186, 827, 257, 472, 823, 426, 560, 864, 541, 587, 948, 67, 4, 512, 705, 10, 112, 253, 120, 133, 551, 184, 395, 269, 520, 225, 163, 364, 174, 455, 756, 119, 595, 466, 126, 511, 255, 927, 207, 37, 894, 447, 691, 494, 824, 11, 875, 631, 770, 576, 264, 446, 397, 64, 879, 436, 609, 805, 106, 121, 276, 713, 854, 100, 709, 330, 478, 543, 624, 930, 591, 372, 363, 439, 851, 563, 176, 666, 313, 683, 592, 51, 229, 86, 318, 413, 907, 720, 56, 146, 24, 66, 83, 357, 231, 403, 578, 746, 39, 711, 970, 371, 125, 761, 291, 376, 565, 421, 469, 589, 533, 731, 857, 422, 254, 412, 317, 682, 55, 105, 442, 862, 380, 909, 729, 221, 546, 572, 491, 567, 398, 946, 209, 218, 454, 916, 749, 199, 747, 200, 917, 205, 1000, 508, 960, 50, 194, 790, 60, 414, 453, 428, 536, 932, 170, 845, 926, 219, 855, 791, 500, 341, 406, 20, 325, 311, 840, 652, 564, 584, 878, 574, 143, 817, 971, 423, 604, 320, 268, 154, 532, 355, 674, 463, 694, 714, 712, 859, 31, 437, 335, 646, 322, 644, 145, 835, 688, 493, 475, 988, 654, 529, 261, 183, 452, 210, 891, 193, 935, 640, 284, 251, 150, 583, 518, 764, 65, 443, 627, 617, 510, 998, 241, 375, 370, 356, 647, 898, 603, 103, 61, 75, 668, 26, 515, 482, 852, 324, 293, 608, 522, 719, 440, 750, 232, 548, 153, 743, 2, 267, 902, 43, 849, 693, 141, 333, 673, 715, 825, 286, 699, 607, 751, 928, 84, 810, 424, 723, 661, 347, 449, 467, 540, 938, 323, 287, 796, 362, 964, 245, 383, 480, 168, 869, 915, 665, 169, 900, 171, 369, 788, 681, 959, 757, 389, 698, 880, 279, 596, 555, 897, 933, 234, 634, 632, 451, 989, 329, 230, 577, 570, 836, 538, 427, 277};
        public int[] sortedArray = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000};
        public SortingService sortingService = new SortingServiceImpl();
    }


    @Benchmark
    @BenchmarkMode(Mode.AverageTime)
    @OutputTimeUnit(TimeUnit.NANOSECONDS)
    public void testMethod(MyState state) {
        int[] result = state.sortingService.sort(state.unsortedArray);
    }


}
